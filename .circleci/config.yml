version: 2
jobs:
  build:
    # machine: true
    docker:
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: hyochan
          MYSQL_PASSWORD: password
    working_directory: ~/app
    steps:
      - checkout
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 

      - run: apt-get install -y sudo
      - run: apt-get install -y curl

      - run:
          name: Install MySQL CLI
          command: |
            sudo apt install -y mysql-client

      - run:
          name: Install Node Version Manager
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v10.16.0
            nvm alias default v10.16.0
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"" >> $BASH_ENV

      - run:
          name: yarn global
          working_directory: .
          command: |
            nvm use v10.16.0
            npm -v
            npm install -g yarn

      - run:
          name: Install packages
          working_directory: .
          command: |
            nvm use v10.16.0
            yarn

      - run:
          name: ESLint
          working_directory: .
          command: |
            nvm use v10.16.0
            yarn lint

      - run:
          name: TSC build
          working_directory: .
          command: |
            nvm use v10.16.0
            yarn tsc

      - run:
          name: Remove dist
          working_directory: .
          command: |
            rm -rf ./dist

      - run:
          name: Jest test
          working_directory: .
          command: |
            nvm use v10.16.0
            yarn test --coverage

      - run:
          name: Upload code coverage
          command: |
            nvm use v10.16.0
            yarn codecov

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
